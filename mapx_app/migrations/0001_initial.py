# Generated by Django 4.2.3 on 2023-07-14 09:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Andorra', 'Andorra'), ('United Arab Emirates', 'United Arab Emirates'), ('Afghanistan', 'Afghanistan'), ('Antigua & Barbuda', 'Antigua & Barbuda'), ('Anguilla', 'Anguilla'), ('Albania', 'Albania'), ('Armenia', 'Armenia'), ('Angola', 'Angola'), ('Antarctica', 'Antarctica'), ('Argentina', 'Argentina'), ('Samoa (American)', 'Samoa (American)'), ('Austria', 'Austria'), ('Australia', 'Australia'), ('Aruba', 'Aruba'), ('Åland Islands', 'Åland Islands'), ('Azerbaijan', 'Azerbaijan'), ('Bosnia & Herzegovina', 'Bosnia & Herzegovina'), ('Barbados', 'Barbados'), ('Bangladesh', 'Bangladesh'), ('Belgium', 'Belgium'), ('Burkina Faso', 'Burkina Faso'), ('Bulgaria', 'Bulgaria'), ('Bahrain', 'Bahrain'), ('Burundi', 'Burundi'), ('Benin', 'Benin'), ('St Barthelemy', 'St Barthelemy'), ('Bermuda', 'Bermuda'), ('Brunei', 'Brunei'), ('Bolivia', 'Bolivia'), ('Caribbean NL', 'Caribbean NL'), ('Brazil', 'Brazil'), ('Bahamas', 'Bahamas'), ('Bhutan', 'Bhutan'), ('Bouvet Island', 'Bouvet Island'), ('Botswana', 'Botswana'), ('Belarus', 'Belarus'), ('Belize', 'Belize'), ('Canada', 'Canada'), ('Cocos (Keeling) Islands', 'Cocos (Keeling) Islands'), ('Congo (Dem. Rep.)', 'Congo (Dem. Rep.)'), ('Central African Rep.', 'Central African Rep.'), ('Congo (Rep.)', 'Congo (Rep.)'), ('Switzerland', 'Switzerland'), ("Côte d'Ivoire", "Côte d'Ivoire"), ('Cook Islands', 'Cook Islands'), ('Chile', 'Chile'), ('Cameroon', 'Cameroon'), ('China', 'China'), ('Colombia', 'Colombia'), ('Costa Rica', 'Costa Rica'), ('Cuba', 'Cuba'), ('Cape Verde', 'Cape Verde'), ('Curaçao', 'Curaçao'), ('Christmas Island', 'Christmas Island'), ('Cyprus', 'Cyprus'), ('Czech Republic', 'Czech Republic'), ('Germany', 'Germany'), ('Djibouti', 'Djibouti'), ('Denmark', 'Denmark'), ('Dominica', 'Dominica'), ('Dominican Republic', 'Dominican Republic'), ('Algeria', 'Algeria'), ('Ecuador', 'Ecuador'), ('Estonia', 'Estonia'), ('Egypt', 'Egypt'), ('Western Sahara', 'Western Sahara'), ('Eritrea', 'Eritrea'), ('Spain', 'Spain'), ('Ethiopia', 'Ethiopia'), ('Finland', 'Finland'), ('Fiji', 'Fiji'), ('Falkland Islands', 'Falkland Islands'), ('Micronesia', 'Micronesia'), ('Faroe Islands', 'Faroe Islands'), ('France', 'France'), ('Gabon', 'Gabon'), ('Britain (UK)', 'Britain (UK)'), ('Grenada', 'Grenada'), ('Georgia', 'Georgia'), ('French Guiana', 'French Guiana'), ('Guernsey', 'Guernsey'), ('Ghana', 'Ghana'), ('Gibraltar', 'Gibraltar'), ('Greenland', 'Greenland'), ('Gambia', 'Gambia'), ('Guinea', 'Guinea'), ('Guadeloupe', 'Guadeloupe'), ('Equatorial Guinea', 'Equatorial Guinea'), ('Greece', 'Greece'), ('South Georgia & the South Sandwich Islands', 'South Georgia & the South Sandwich Islands'), ('Guatemala', 'Guatemala'), ('Guam', 'Guam'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Guyana', 'Guyana'), ('Hong Kong', 'Hong Kong'), ('Heard Island & McDonald Islands', 'Heard Island & McDonald Islands'), ('Honduras', 'Honduras'), ('Croatia', 'Croatia'), ('Haiti', 'Haiti'), ('Hungary', 'Hungary'), ('Indonesia', 'Indonesia'), ('Ireland', 'Ireland'), ('Israel', 'Israel'), ('Isle of Man', 'Isle of Man'), ('India', 'India'), ('British Indian Ocean Territory', 'British Indian Ocean Territory'), ('Iraq', 'Iraq'), ('Iran', 'Iran'), ('Iceland', 'Iceland'), ('Italy', 'Italy'), ('Jersey', 'Jersey'), ('Jamaica', 'Jamaica'), ('Jordan', 'Jordan'), ('Japan', 'Japan'), ('Kenya', 'Kenya'), ('Kyrgyzstan', 'Kyrgyzstan'), ('Cambodia', 'Cambodia'), ('Kiribati', 'Kiribati'), ('Comoros', 'Comoros'), ('St Kitts & Nevis', 'St Kitts & Nevis'), ('Korea (North)', 'Korea (North)'), ('Korea (South)', 'Korea (South)'), ('Kuwait', 'Kuwait'), ('Cayman Islands', 'Cayman Islands'), ('Kazakhstan', 'Kazakhstan'), ('Laos', 'Laos'), ('Lebanon', 'Lebanon'), ('St Lucia', 'St Lucia'), ('Liechtenstein', 'Liechtenstein'), ('Sri Lanka', 'Sri Lanka'), ('Liberia', 'Liberia'), ('Lesotho', 'Lesotho'), ('Lithuania', 'Lithuania'), ('Luxembourg', 'Luxembourg'), ('Latvia', 'Latvia'), ('Libya', 'Libya'), ('Morocco', 'Morocco'), ('Monaco', 'Monaco'), ('Moldova', 'Moldova'), ('Montenegro', 'Montenegro'), ('St Martin (French)', 'St Martin (French)'), ('Madagascar', 'Madagascar'), ('Marshall Islands', 'Marshall Islands'), ('North Macedonia', 'North Macedonia'), ('Mali', 'Mali'), ('Myanmar (Burma)', 'Myanmar (Burma)'), ('Mongolia', 'Mongolia'), ('Macau', 'Macau'), ('Northern Mariana Islands', 'Northern Mariana Islands'), ('Martinique', 'Martinique'), ('Mauritania', 'Mauritania'), ('Montserrat', 'Montserrat'), ('Malta', 'Malta'), ('Mauritius', 'Mauritius'), ('Maldives', 'Maldives'), ('Malawi', 'Malawi'), ('Mexico', 'Mexico'), ('Malaysia', 'Malaysia'), ('Mozambique', 'Mozambique'), ('Namibia', 'Namibia'), ('New Caledonia', 'New Caledonia'), ('Niger', 'Niger'), ('Norfolk Island', 'Norfolk Island'), ('Nigeria', 'Nigeria'), ('Nicaragua', 'Nicaragua'), ('Netherlands', 'Netherlands'), ('Norway', 'Norway'), ('Nepal', 'Nepal'), ('Nauru', 'Nauru'), ('Niue', 'Niue'), ('New Zealand', 'New Zealand'), ('Oman', 'Oman'), ('Panama', 'Panama'), ('Peru', 'Peru'), ('French Polynesia', 'French Polynesia'), ('Papua New Guinea', 'Papua New Guinea'), ('Philippines', 'Philippines'), ('Pakistan', 'Pakistan'), ('Poland', 'Poland'), ('St Pierre & Miquelon', 'St Pierre & Miquelon'), ('Pitcairn', 'Pitcairn'), ('Puerto Rico', 'Puerto Rico'), ('Palestine', 'Palestine'), ('Portugal', 'Portugal'), ('Palau', 'Palau'), ('Paraguay', 'Paraguay'), ('Qatar', 'Qatar'), ('Réunion', 'Réunion'), ('Romania', 'Romania'), ('Serbia', 'Serbia'), ('Russia', 'Russia'), ('Rwanda', 'Rwanda'), ('Saudi Arabia', 'Saudi Arabia'), ('Solomon Islands', 'Solomon Islands'), ('Seychelles', 'Seychelles'), ('Sudan', 'Sudan'), ('Sweden', 'Sweden'), ('Singapore', 'Singapore'), ('St Helena', 'St Helena'), ('Slovenia', 'Slovenia'), ('Svalbard & Jan Mayen', 'Svalbard & Jan Mayen'), ('Slovakia', 'Slovakia'), ('Sierra Leone', 'Sierra Leone'), ('San Marino', 'San Marino'), ('Senegal', 'Senegal'), ('Somalia', 'Somalia'), ('Suriname', 'Suriname'), ('South Sudan', 'South Sudan'), ('Sao Tome & Principe', 'Sao Tome & Principe'), ('El Salvador', 'El Salvador'), ('St Maarten (Dutch)', 'St Maarten (Dutch)'), ('Syria', 'Syria'), ('Eswatini (Swaziland)', 'Eswatini (Swaziland)'), ('Turks & Caicos Is', 'Turks & Caicos Is'), ('Chad', 'Chad'), ('French S. Terr.', 'French S. Terr.'), ('Togo', 'Togo'), ('Thailand', 'Thailand'), ('Tajikistan', 'Tajikistan'), ('Tokelau', 'Tokelau'), ('East Timor', 'East Timor'), ('Turkmenistan', 'Turkmenistan'), ('Tunisia', 'Tunisia'), ('Tonga', 'Tonga'), ('Turkey', 'Turkey'), ('Trinidad & Tobago', 'Trinidad & Tobago'), ('Tuvalu', 'Tuvalu'), ('Taiwan', 'Taiwan'), ('Tanzania', 'Tanzania'), ('Ukraine', 'Ukraine'), ('Uganda', 'Uganda'), ('US minor outlying islands', 'US minor outlying islands'), ('United States', 'United States'), ('Uruguay', 'Uruguay'), ('Uzbekistan', 'Uzbekistan'), ('Vatican City', 'Vatican City'), ('St Vincent', 'St Vincent'), ('Venezuela', 'Venezuela'), ('Virgin Islands (UK)', 'Virgin Islands (UK)'), ('Virgin Islands (US)', 'Virgin Islands (US)'), ('Vietnam', 'Vietnam'), ('Vanuatu', 'Vanuatu'), ('Wallis & Futuna', 'Wallis & Futuna'), ('Samoa (western)', 'Samoa (western)'), ('Yemen', 'Yemen'), ('Mayotte', 'Mayotte'), ('South Africa', 'South Africa'), ('Zambia', 'Zambia'), ('Zimbabwe', 'Zimbabwe')], max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Farmer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('folio_id', models.CharField(max_length=10, unique=True)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('picture', models.ImageField(upload_to='media/')),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mapx_app.city')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mapx_app.country')),
                ('state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mapx_app.state')),
            ],
        ),
        migrations.CreateModel(
            name='FieldOfficer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_farmers_assigned', models.PositiveIntegerField(default=0)),
                ('num_farms_mapped', models.PositiveIntegerField(default=0)),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mapx_app.location')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='feo', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Farmland',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('farm_name', models.CharField(blank=True, max_length=100, null=True)),
                ('size', models.DecimalField(decimal_places=2, max_digits=8)),
                ('area', models.CharField(max_length=20)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('picture', models.ImageField(upload_to='media/')),
                ('farm_address', models.CharField(max_length=250)),
                ('is_mapped', models.BooleanField(default=False)),
                ('farmer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='farmlands', to='mapx_app.farmer')),
                ('field_officer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mapx_app.fieldofficer')),
            ],
        ),
        migrations.AddField(
            model_name='farmer',
            name='assigned_field_officer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mapx_app.fieldofficer'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mapx_app.location'),
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mapx_app.location')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='admin', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(choices=[('admin', 'Admin'), ('field_officer', 'Field Officer')], max_length=20)),
                ('action_type', models.CharField(choices=[('created_fo', 'Created a Field Officer'), ('mapped_farm', 'Mapped a Farmland')], max_length=20)),
                ('platform', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
    ]
